name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_Region }}

      - name: Upload bootstrap script to S3
        run: aws s3 cp src/scripts/install_dependencies.sh s3://${{ secrets.BOOTSTRAP_SCRIPTS_BUCKET }}/install_dependencies.sh

      - name: Terraform Init
        working-directory: terraform/
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform/
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform/
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: terraform/
        run: terraform apply -auto-approve tfplan

  destroy:
    runs-on: ubuntu-latest
    # Only trigger destroy manually or on a specific branch
    if: github.ref == 'refs/heads/destroy-infrastructure' # Example condition
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_Region }}

      - name: Terraform Destroy
        working-directory: terraform/
        run: terraform destroy -auto-approve

  python-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - src/lambdas/ingest_alpha_vantage
          - src/lambdas/ingest_postgresql
          - src/lambdas/ingest_s3
          - src/emr_jobs
          - src/airflow_dags
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12' # Updated Python version

      - name: Install dependencies with Poetry
        working-directory: ${{ matrix.path }}
        run: |
          pip install poetry
          poetry install

      - name: Run Tests
        working-directory: ${{ matrix.path }}
        run: poetry run pytest tests/

  codeql:
    name: "CodeQL Analysis"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
